import random
import time

def insert_sort(arr, left, right):
    for x in range(left + 1, right):
        val = arr[x]
        j = x - 1
        while j >= 0 and val < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = val

def dual_pivot_sort(arr, left, right, size):
    if right > left:
        if right - left < size:
            insert_sort(arr, left, right)
            return

        if arr[left] > arr[right]:
            swap(arr, left, right)

        pivot1 = arr[left]
        pivot2 = arr[right]

        l, g, k = left + 1, right - 1, left + 1
        while k <= g:
            if arr[k] < pivot1:
                swap(arr, k, l)
                l += 1
            elif arr[k] >= pivot2:
                while arr[g] > pivot2 and k < g:
                    g -= 1
                swap(arr, k, g)
                g -= 1
                if arr[k] < pivot1:
                    swap(arr, k, l)
                    l += 1
            k += 1
        l -= 1
        g += 1

        swap(arr, left, l)
        swap(arr, right, g)

        dual_pivot_sort(arr, left, l - 1, size)
        dual_pivot_sort(arr, l + 1, g - 1, size)
        dual_pivot_sort(arr, g + 1, right, size)

def swap(arr, i, j):
    arr[i], arr[j] = arr[j], arr[i]

n_values = [17, 33, 65, 129, 257, 513]
m_values = [10000, 100000, 200000, 400000, 800000, 1600000, 3200000, 6400000]

for m in m_values:
    for n in n_values:
        arr2 = [random.randint(0, 999999999) for _ in range(m)]
        print(f"dualPivot = {m}, n = {n}", end="")

        start_time = time.time() * 1000
        dual_pivot_sort(arr2, 0, len(arr2) - 1, n)
        end_time = time.time() * 1000
        print(f" : {end_time - start_time:.2f} ms")
    print()